[{"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\index.tsx":"1","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\reportWebVitals.ts":"2","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\App.tsx":"3","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\MetricSlider.tsx":"4","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\GenreSelector.tsx":"5"},{"size":500,"mtime":1608436773401,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":3190,"mtime":1608593174609,"results":"9","hashOfConfig":"7"},{"size":1870,"mtime":1608593849980,"results":"10","hashOfConfig":"7"},{"size":2013,"mtime":1608583587452,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"zgppml",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\index.tsx",[],["24","25"],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\reportWebVitals.ts",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\App.tsx",["26","27","28","29","30","31","32","33","34"],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\MetricSlider.tsx",["35"],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\GenreSelector.tsx",["36","37","38","39"],"import React, { useState, useEffect } from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport * as genres from './helpers/genres.json';\r\nimport * as genresInitialState from './helpers/genreSelectInitialState.json'\r\n\r\nexport default function GenreSelector(props: {onChange: (newValue: any[]) => void}) {\r\n    //const [state, setState] = useState(genresInitialState.popular_genres)\r\n    const [state, setState] = useState([\r\n        {id: \"pop\", checked: false}, \r\n        {id: \"hip-hop\", checked: false}, \r\n        {id: \"rock\", checked: false}, \r\n        {id: \"edm\", checked: false}, \r\n        {id: \"indie\", checked: false}, \r\n        {id: \"k-pop\", checked: false}, \r\n        {id: \"country\", checked: false}, \r\n        {id: \"classical\", checked: false}, \r\n        {id: \"latin\", checked: false}\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        props.onChange(state)\r\n    }, [state]);\r\n\r\n    const handleChange = (event: { target: { checked: boolean; name: string; }; }) => {\r\n        let updated_box = {id: event.target.name, checked: event.target.checked};\r\n        let updated_state: { id: string; checked: boolean; }[] = [];\r\n        state.map((genre) => {\r\n            if (genre.id === event.target.name) {\r\n                updated_state.push(updated_box);\r\n            } else {\r\n                updated_state.push(genre);\r\n            }\r\n        })\r\n        setState(state => updated_state)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <FormGroup row>\r\n                {state.map((genre) => {\r\n                    return (\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={genre.checked} onChange={handleChange} name={genre.id}/>}\r\n                            label={genre.id}\r\n                        />\r\n                    )\r\n                })}\r\n            </FormGroup>\r\n        </React.Fragment>\r\n    );\r\n}",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"44","severity":1,"message":"48","line":10,"column":10,"nodeType":"46","messageId":"47","endLine":10,"endColumn":20},{"ruleId":"44","severity":1,"message":"49","line":11,"column":10,"nodeType":"46","messageId":"47","endLine":11,"endColumn":16},{"ruleId":"44","severity":1,"message":"50","line":12,"column":10,"nodeType":"46","messageId":"47","endLine":12,"endColumn":26},{"ruleId":"44","severity":1,"message":"51","line":13,"column":10,"nodeType":"46","messageId":"47","endLine":13,"endColumn":22},{"ruleId":"44","severity":1,"message":"52","line":14,"column":10,"nodeType":"46","messageId":"47","endLine":14,"endColumn":19},{"ruleId":"53","severity":1,"message":"54","line":50,"column":32,"nodeType":"55","messageId":"56","endLine":50,"endColumn":34},{"ruleId":"44","severity":1,"message":"57","line":58,"column":12,"nodeType":"46","messageId":"47","endLine":58,"endColumn":24},{"ruleId":"44","severity":1,"message":"58","line":60,"column":11,"nodeType":"46","messageId":"47","endLine":60,"endColumn":30},{"ruleId":"59","severity":1,"message":"60","line":18,"column":8,"nodeType":"61","endLine":18,"endColumn":19,"suggestions":"62"},{"ruleId":"44","severity":1,"message":"63","line":5,"column":13,"nodeType":"46","messageId":"47","endLine":5,"endColumn":19},{"ruleId":"44","severity":1,"message":"64","line":6,"column":13,"nodeType":"46","messageId":"47","endLine":6,"endColumn":31},{"ruleId":"59","severity":1,"message":"60","line":24,"column":8,"nodeType":"61","endLine":24,"endColumn":15,"suggestions":"65"},{"ruleId":"53","severity":1,"message":"54","line":29,"column":27,"nodeType":"55","messageId":"56","endLine":29,"endColumn":29},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'popularity' is assigned a value but never used.","'energy' is assigned a value but never used.","'instrumentalness' is assigned a value but never used.","'acousticness' is assigned a value but never used.","'happiness' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'queryBuilder' is defined but never used.","'genreString' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["68"],"'genres' is defined but never used.","'genresInitialState' is defined but never used.",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"Update the dependencies array to be: [currValue, props]",{"range":"74","text":"75"},"Update the dependencies array to be: [props, state]",{"range":"76","text":"77"},[619,630],"[currValue, props]",[1005,1012],"[props, state]"]