[{"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\index.tsx":"1","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\reportWebVitals.ts":"2","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\App.tsx":"3","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\MetricSlider\\MetricSlider.tsx":"4","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\GenreSelector\\GenreSelector.tsx":"5","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\shared\\GreenCheckbox.tsx":"6","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\shared\\GreenButton.tsx":"7","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\SpotifyList\\SpotifyList.tsx":"8","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\SpotifyListItem\\SpotifyListItem.tsx":"9","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\shared\\ProgressBar.tsx":"10","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\shared\\InputField\\InputField.tsx":"11","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\shared\\CircularProgressBar.tsx":"12","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\helpers\\AlertEnum.tsx":"13","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\Snackbar\\SnackbarNotif.tsx":"14","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\Modal\\SignInModal.tsx":"15","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\WelcomeText\\WelcomeText.tsx":"16","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\SettingsPanel\\SettingsPanel.tsx":"17","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\helpers\\http\\http.tsx":"18","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\helpers\\helpers.tsx":"19","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\DisplayPanel\\DisplayPanel.tsx":"20","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\MoreGenresModal\\MoreGenresModal.tsx":"21","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\desktop\\DesktopLayout.tsx":"22","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\mobile\\MobileLayout.tsx":"23"},{"size":500,"mtime":1608436773401,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":546,"mtime":1609383911913,"results":"27","hashOfConfig":"25"},{"size":2271,"mtime":1609210603328,"results":"28","hashOfConfig":"25"},{"size":1615,"mtime":1609293782719,"results":"29","hashOfConfig":"25"},{"size":397,"mtime":1608616554582,"results":"30","hashOfConfig":"25"},{"size":352,"mtime":1609134321180,"results":"31","hashOfConfig":"25"},{"size":805,"mtime":1609307320012,"results":"32","hashOfConfig":"25"},{"size":5244,"mtime":1609380844463,"results":"33","hashOfConfig":"25"},{"size":489,"mtime":1609025026735,"results":"34","hashOfConfig":"25"},{"size":565,"mtime":1609360974738,"results":"35","hashOfConfig":"25"},{"size":305,"mtime":1609211853050,"results":"36","hashOfConfig":"25"},{"size":451,"mtime":1609215646863,"results":"37","hashOfConfig":"25"},{"size":1888,"mtime":1609307189194,"results":"38","hashOfConfig":"25"},{"size":2033,"mtime":1609291475161,"results":"39","hashOfConfig":"25"},{"size":719,"mtime":1609274127323,"results":"40","hashOfConfig":"25"},{"size":6584,"mtime":1609358860426,"results":"41","hashOfConfig":"25"},{"size":2863,"mtime":1609311764168,"results":"42","hashOfConfig":"25"},{"size":2660,"mtime":1609360236677,"results":"43","hashOfConfig":"25"},{"size":6445,"mtime":1609291153228,"results":"44","hashOfConfig":"25"},{"size":4236,"mtime":1609361293213,"results":"45","hashOfConfig":"25"},{"size":3532,"mtime":1609381434148,"results":"46","hashOfConfig":"25"},{"size":386,"mtime":1609382627167,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"zgppml",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\index.tsx",[],["96","97"],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\reportWebVitals.ts",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\App.tsx",["98"],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\MetricSlider\\MetricSlider.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\GenreSelector\\GenreSelector.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\shared\\GreenCheckbox.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\shared\\GreenButton.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\SpotifyList\\SpotifyList.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\SpotifyListItem\\SpotifyListItem.tsx",["99"],"import React, {useState, useEffect, useRef} from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport { ProgressBar } from '../shared/ProgressBar';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        inline: {\r\n        display: 'inline',\r\n        color: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700]\r\n        },\r\n        albumImage: {\r\n            objectFit: 'contain',\r\n            width: '5em',\r\n            marginRight: '1em',\r\n        },\r\n        playPause: {\r\n            color: '#1DB954',\r\n            height: '1.5em',\r\n            width: '1.5em',\r\n            marginRight: '1.5em'\r\n        },\r\n        disabled: {\r\n            color: '#bdbdbd',\r\n            height: '1.5em',\r\n            width: '1.5em',\r\n            marginRight: '1.5em'\r\n        },\r\n  }),\r\n);\r\n\r\nexport default function SpotifyListItem(props: {key: any, track: any, index: number, onChange: (newVisible: boolean) => void}) {\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const isDisabled = props.track.preview_url === null;\r\n    const [currTime, setCurrTime] = useState(0);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [isAnimate, setIsAnimate] = useState(false);\r\n    const audioEl: any = useRef(null);\r\n    const classes = useStyles();\r\n    const duration = 61;\r\n\r\n    useEffect(() => {\r\n        let interval: any = null;\r\n        if (isPlaying && currTime !== duration) {\r\n            interval = setInterval(() => {\r\n                setCurrTime(currTime => currTime + 1);\r\n              }, 500);\r\n        } \r\n        else if (isPlaying && currTime === duration) {\r\n            setIsPlaying(false);\r\n            setCurrTime(0);\r\n            clearInterval(interval);\r\n            setIsActive(false);\r\n        }\r\n        else if (!isPlaying && currTime !== 0) {\r\n            clearInterval(interval);\r\n        }\r\n        return () => {\r\n            clearInterval(interval);\r\n        }\r\n    }, [isPlaying, currTime])\r\n\r\n    useEffect(() => {\r\n        if (isPlaying && audioEl.current !== null) {\r\n            audioEl.current.play();\r\n        } else if(!isPlaying && audioEl.current !== null){\r\n            audioEl.current.pause();\r\n        }\r\n    }, [isPlaying])\r\n\r\n    useEffect(() => { /*FIX THIS TOO */\r\n        props.onChange(isAnimate);\r\n    }, [isAnimate])\r\n\r\n    const getArtists = () => {\r\n        let artist_list: any[] = [];\r\n        props.track.artists.map((artist: any) => {\r\n            return artist_list.push(artist.name);\r\n        })\r\n        return artist_list.join(', ');\r\n    }\r\n\r\n    const onPlayPauseClick = () => {\r\n        if (isPlaying) {\r\n            setIsPlaying(false)\r\n        } else {\r\n            setIsPlaying(true)\r\n            setIsActive(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <VisibilitySensor\r\n            onChange={(isVisible) => {\r\n                if (props.index === 1) {\r\n                    setIsAnimate(isVisible);\r\n                }\r\n            }}\r\n        >\r\n            <ListItem button={true} alignItems=\"flex-start\">\r\n                <img alt={props.track.album.name} src={props.track.album.images[0].url} className={classes.albumImage}/>\r\n                <ListItemText\r\n                    primary={props.track.name}\r\n                    secondary={\r\n                        <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                        >\r\n                            {props.track.album.name}\r\n                            <br/>\r\n                            {getArtists()}\r\n                            \r\n                        </Typography>\r\n                        {isActive &&\r\n                            <ProgressBar variant=\"determinate\" value={currTime * (100/duration)}/>\r\n                        }\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n                <ListItemSecondaryAction>\r\n                    <IconButton edge=\"end\" aria-label=\"play-pause-button\" onClick={onPlayPauseClick} disabled={isDisabled}>\r\n                        {!isPlaying && \r\n                            <PlayCircleOutlineIcon className={isDisabled ? classes.disabled : classes.playPause}/>\r\n                        }\r\n                        {isPlaying &&\r\n                            <PauseCircleOutlineIcon className={classes.playPause} />\r\n                        }\r\n                    </IconButton>\r\n                    <audio ref={audioEl} src={props.track.preview_url} />\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        </VisibilitySensor>\r\n    )\r\n}","C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\shared\\ProgressBar.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\shared\\InputField\\InputField.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\shared\\CircularProgressBar.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\helpers\\AlertEnum.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\Snackbar\\SnackbarNotif.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\Modal\\SignInModal.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\WelcomeText\\WelcomeText.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\SettingsPanel\\SettingsPanel.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\helpers\\http\\http.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\helpers\\helpers.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\DisplayPanel\\DisplayPanel.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\components\\MoreGenresModal\\MoreGenresModal.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\desktop\\DesktopLayout.tsx",[],"C:\\Users\\akell\\custom-playlist-builder\\custom-playlist-builder\\src\\mobile\\MobileLayout.tsx",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":10,"column":9,"nodeType":"106","messageId":"107","endLine":10,"endColumn":25},{"ruleId":"108","severity":1,"message":"109","line":80,"column":8,"nodeType":"110","endLine":80,"endColumn":19,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"@typescript-eslint/no-unused-vars","'isTabletOrMobile' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["114"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [isAnimate, props]",{"range":"117","text":"118"},[2858,2869],"[isAnimate, props]"]